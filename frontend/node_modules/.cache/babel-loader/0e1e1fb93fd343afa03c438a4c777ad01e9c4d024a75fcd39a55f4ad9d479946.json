{"ast":null,"code":"import React,{useEffect,useRef}from\"react\";import socket from\"../socket\";import{jsx as _jsx}from\"react/jsx-runtime\";const Whiteboard=()=>{const canvasRef=useRef(null);const ctxRef=useRef(null);const isDrawing=useRef(false);// Ref to track drawing state\nuseEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext(\"2d\");if(!ctx)return;ctx.lineCap=\"round\";ctx.lineWidth=5;ctx.strokeStyle=\"#000000\";ctxRef.current=ctx;// Function to draw on the canvas\nconst draw=function(x,y){let emit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(!ctxRef.current)return;ctxRef.current.lineTo(x,y);ctxRef.current.stroke();if(emit){socket.emit(\"draw\",{x,y});}};// Mouse down handler\nconst handleMouseDown=e=>{var _ctxRef$current,_ctxRef$current2;isDrawing.current=true;(_ctxRef$current=ctxRef.current)===null||_ctxRef$current===void 0?void 0:_ctxRef$current.beginPath();(_ctxRef$current2=ctxRef.current)===null||_ctxRef$current2===void 0?void 0:_ctxRef$current2.moveTo(e.clientX-canvas.getBoundingClientRect().left,e.clientY-canvas.getBoundingClientRect().top);};// Mouse up handler\nconst handleMouseUp=()=>{if(isDrawing.current){var _ctxRef$current3;(_ctxRef$current3=ctxRef.current)===null||_ctxRef$current3===void 0?void 0:_ctxRef$current3.closePath();// Close the path\n}isDrawing.current=false;// Stop drawing\n};// Mouse move handler\nconst handleMouseMove=e=>{if(!isDrawing.current)return;const offsetX=e.clientX-canvas.getBoundingClientRect().left;const offsetY=e.clientY-canvas.getBoundingClientRect().top;draw(offsetX,offsetY,true);// Draw locally and emit the coordinates\n};// Draw event from other users\nconst handleDraw=_ref=>{let{x,y}=_ref;draw(x,y);// Draw from other users\n};// Listen to socket events\nsocket.on(\"draw\",handleDraw);// Add event listeners for canvas\ncanvas.addEventListener(\"mousedown\",handleMouseDown);canvas.addEventListener(\"mouseup\",handleMouseUp);canvas.addEventListener(\"mousemove\",handleMouseMove);canvas.addEventListener(\"mouseleave\",handleMouseUp);// Stop drawing if mouse leaves canvas\n// Cleanup function to remove event listeners and socket subscriptions\nreturn()=>{socket.off(\"draw\",handleDraw);canvas.removeEventListener(\"mousedown\",handleMouseDown);canvas.removeEventListener(\"mouseup\",handleMouseUp);canvas.removeEventListener(\"mousemove\",handleMouseMove);canvas.removeEventListener(\"mouseleave\",handleMouseUp);};},[]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:800,height:600,style:{border:\"1px solid black\"}});};export default Whiteboard;","map":{"version":3,"names":["React","useEffect","useRef","socket","jsx","_jsx","Whiteboard","canvasRef","ctxRef","isDrawing","canvas","current","ctx","getContext","lineCap","lineWidth","strokeStyle","draw","x","y","emit","arguments","length","undefined","lineTo","stroke","handleMouseDown","e","_ctxRef$current","_ctxRef$current2","beginPath","moveTo","clientX","getBoundingClientRect","left","clientY","top","handleMouseUp","_ctxRef$current3","closePath","handleMouseMove","offsetX","offsetY","handleDraw","_ref","on","addEventListener","off","removeEventListener","ref","width","height","style","border"],"sources":["/Users/shahana-salam/realtime-whiteboard/frontend/src/components/Whiteboard.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport socket from \"../socket\";\n\nconst Whiteboard: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const ctxRef = useRef<CanvasRenderingContext2D | null>(null);\n  const isDrawing = useRef(false); // Ref to track drawing state\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    ctx.lineCap = \"round\";\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"#000000\";\n    ctxRef.current = ctx;\n\n    // Function to draw on the canvas\n    const draw = (x: number, y: number, emit = false) => {\n      if (!ctxRef.current) return;\n      ctxRef.current.lineTo(x, y);\n      ctxRef.current.stroke();\n      if (emit) {\n        socket.emit(\"draw\", { x, y });\n      }\n    };\n\n    // Mouse down handler\n    const handleMouseDown = (e: MouseEvent) => {\n      isDrawing.current = true;\n      ctxRef.current?.beginPath();\n      ctxRef.current?.moveTo(\n        e.clientX - canvas.getBoundingClientRect().left,\n        e.clientY - canvas.getBoundingClientRect().top\n      );\n    };\n\n    // Mouse up handler\n    const handleMouseUp = () => {\n      if (isDrawing.current) {\n        ctxRef.current?.closePath(); // Close the path\n      }\n      isDrawing.current = false; // Stop drawing\n    };\n\n    // Mouse move handler\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!isDrawing.current) return;\n      const offsetX = e.clientX - canvas.getBoundingClientRect().left;\n      const offsetY = e.clientY - canvas.getBoundingClientRect().top;\n      draw(offsetX, offsetY, true); // Draw locally and emit the coordinates\n    };\n\n    // Draw event from other users\n    const handleDraw = ({ x, y }: { x: number; y: number }) => {\n      draw(x, y); // Draw from other users\n    };\n\n    // Listen to socket events\n    socket.on(\"draw\", handleDraw);\n\n    // Add event listeners for canvas\n    canvas.addEventListener(\"mousedown\", handleMouseDown);\n    canvas.addEventListener(\"mouseup\", handleMouseUp);\n    canvas.addEventListener(\"mousemove\", handleMouseMove);\n    canvas.addEventListener(\"mouseleave\", handleMouseUp); // Stop drawing if mouse leaves canvas\n\n    // Cleanup function to remove event listeners and socket subscriptions\n    return () => {\n      socket.off(\"draw\", handleDraw);\n      canvas.removeEventListener(\"mousedown\", handleMouseDown);\n      canvas.removeEventListener(\"mouseup\", handleMouseUp);\n      canvas.removeEventListener(\"mousemove\", handleMouseMove);\n      canvas.removeEventListener(\"mouseleave\", handleMouseUp);\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={800}\n      height={600}\n      style={{ border: \"1px solid black\" }}\n    />\n  );\n};\n\nexport default Whiteboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}